/* tslint:disable */
/* eslint-disable */
/**
 * Retirement‐Matching API
 * REST endpoints for user auth (via magic‐link), retirees, career elements, reference data, startups, job postings, matching, conversations, and hire invites. Uses a JWT set in a cookie. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserPublicSummary
 */
export interface UserPublicSummary {
    /**
     * Unique identifier for any user (retiree or startup).
     * @type {string}
     * @memberof UserPublicSummary
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserPublicSummary
     */
    userType?: UserPublicSummaryUserTypeEnum;
    /**
     * Last name of the retiree/startup user.
     * @type {string}
     * @memberof UserPublicSummary
     */
    nameLast: string;
    /**
     * First name of the retiree/startup user.
     * @type {string}
     * @memberof UserPublicSummary
     */
    nameFirst: string;
    /**
     * 
     * @type {string}
     * @memberof UserPublicSummary
     */
    profilePicture?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserPublicSummary
     */
    shortDescription?: string;
}


/**
 * @export
 */
export const UserPublicSummaryUserTypeEnum = {
    Retiree: 'Retiree',
    Startup: 'Startup'
} as const;
export type UserPublicSummaryUserTypeEnum = typeof UserPublicSummaryUserTypeEnum[keyof typeof UserPublicSummaryUserTypeEnum];


/**
 * Check if a given object implements the UserPublicSummary interface.
 */
export function instanceOfUserPublicSummary(value: object): value is UserPublicSummary {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('nameLast' in value) || value['nameLast'] === undefined) return false;
    if (!('nameFirst' in value) || value['nameFirst'] === undefined) return false;
    return true;
}

export function UserPublicSummaryFromJSON(json: any): UserPublicSummary {
    return UserPublicSummaryFromJSONTyped(json, false);
}

export function UserPublicSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPublicSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'userType': json['userType'] == null ? undefined : json['userType'],
        'nameLast': json['nameLast'],
        'nameFirst': json['nameFirst'],
        'profilePicture': json['profilePicture'] == null ? undefined : json['profilePicture'],
        'shortDescription': json['shortDescription'] == null ? undefined : json['shortDescription'],
    };
}

export function UserPublicSummaryToJSON(json: any): UserPublicSummary {
    return UserPublicSummaryToJSONTyped(json, false);
}

export function UserPublicSummaryToJSONTyped(value?: UserPublicSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'userType': value['userType'],
        'nameLast': value['nameLast'],
        'nameFirst': value['nameFirst'],
        'profilePicture': value['profilePicture'],
        'shortDescription': value['shortDescription'],
    };
}

