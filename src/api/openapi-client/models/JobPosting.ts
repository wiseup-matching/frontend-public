/* tslint:disable */
/* eslint-disable */
/**
 * Retirement‐Matching API
 * REST endpoints for user auth (via magic‐link), retirees, career elements, reference data, startups, job postings, matching, conversations, and hire invites. Uses a JWT set in a cookie. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LanguageProficiency } from './LanguageProficiency';
import {
    LanguageProficiencyFromJSON,
    LanguageProficiencyFromJSONTyped,
    LanguageProficiencyToJSON,
    LanguageProficiencyToJSONTyped,
} from './LanguageProficiency';

/**
 * 
 * @export
 * @interface JobPosting
 */
export interface JobPosting {
    /**
     * Unique identifier for this job posting.
     * @type {string}
     * @memberof JobPosting
     */
    id: string;
    /**
     * The Startup that owns this posting.
     * @type {string}
     * @memberof JobPosting
     */
    startupId: string;
    /**
     * Title of the position (e.g. ‐Backend Developer‐).
     * @type {string}
     * @memberof JobPosting
     */
    title: string;
    /**
     * Full job description / responsibilities.
     * @type {string}
     * @memberof JobPosting
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof JobPosting
     */
    requiredZip?: string | null;
    /**
     * City where the job must be performed.
     * @type {string}
     * @memberof JobPosting
     */
    requiredCity?: string | null;
    /**
     * Country where job must be performed.
     * @type {string}
     * @memberof JobPosting
     */
    requiredCountry?: string | null;
    /**
     * Approximate duration in weeks (if project‐based).
     * @type {number}
     * @memberof JobPosting
     */
    approxDurationWeeks?: number | null;
    /**
     * Approximate hours per week.
     * @type {number}
     * @memberof JobPosting
     */
    approxHoursPerWeek?: number | null;
    /**
     * Approx. days per week.
     * @type {number}
     * @memberof JobPosting
     */
    approxDaysPerWeek?: number | null;
    /**
     * Approximate hourly wage in EUR.
     * @type {number}
     * @memberof JobPosting
     */
    approxHourlySalaryEUR?: number | null;
    /**
     * When they would like the retiree to start.
     * @type {Date}
     * @memberof JobPosting
     */
    desiredStartDate?: Date | null;
    /**
     * List of language‐proficiency requirements.
     * @type {Array<LanguageProficiency>}
     * @memberof JobPosting
     */
    matchingLanguageProficiencies?: Array<LanguageProficiency>;
    /**
     * Expertise areas required for this job (0..*).
     * @type {Array<string>}
     * @memberof JobPosting
     */
    matchingExpertiseAreas?: Array<string>;
    /**
     * Skills required (0..*).
     * @type {Array<string>}
     * @memberof JobPosting
     */
    matchingSkills?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof JobPosting
     */
    matchingPositions?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof JobPosting
     */
    matchingDegrees?: Array<string>;
    /**
     * When the job posting was created.
     * @type {Date}
     * @memberof JobPosting
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof JobPosting
     */
    subscriptionTier?: JobPostingSubscriptionTierEnum;
}


/**
 * @export
 */
export const JobPostingSubscriptionTierEnum = {
    Free: 'free',
    Silver: 'silver',
    Gold: 'gold'
} as const;
export type JobPostingSubscriptionTierEnum = typeof JobPostingSubscriptionTierEnum[keyof typeof JobPostingSubscriptionTierEnum];


/**
 * Check if a given object implements the JobPosting interface.
 */
export function instanceOfJobPosting(value: object): value is JobPosting {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('startupId' in value) || value['startupId'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function JobPostingFromJSON(json: any): JobPosting {
    return JobPostingFromJSONTyped(json, false);
}

export function JobPostingFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobPosting {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'startupId': json['startupId'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'requiredZip': json['requiredZip'] == null ? undefined : json['requiredZip'],
        'requiredCity': json['requiredCity'] == null ? undefined : json['requiredCity'],
        'requiredCountry': json['requiredCountry'] == null ? undefined : json['requiredCountry'],
        'approxDurationWeeks': json['approxDurationWeeks'] == null ? undefined : json['approxDurationWeeks'],
        'approxHoursPerWeek': json['approxHoursPerWeek'] == null ? undefined : json['approxHoursPerWeek'],
        'approxDaysPerWeek': json['approxDaysPerWeek'] == null ? undefined : json['approxDaysPerWeek'],
        'approxHourlySalaryEUR': json['approxHourlySalaryEUR'] == null ? undefined : json['approxHourlySalaryEUR'],
        'desiredStartDate': json['desiredStartDate'] == null ? undefined : (new Date(json['desiredStartDate'])),
        'matchingLanguageProficiencies': json['matchingLanguageProficiencies'] == null ? undefined : ((json['matchingLanguageProficiencies'] as Array<any>).map(LanguageProficiencyFromJSON)),
        'matchingExpertiseAreas': json['matchingExpertiseAreas'] == null ? undefined : json['matchingExpertiseAreas'],
        'matchingSkills': json['matchingSkills'] == null ? undefined : json['matchingSkills'],
        'matchingPositions': json['matchingPositions'] == null ? undefined : json['matchingPositions'],
        'matchingDegrees': json['matchingDegrees'] == null ? undefined : json['matchingDegrees'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'subscriptionTier': json['subscriptionTier'] == null ? undefined : json['subscriptionTier'],
    };
}

export function JobPostingToJSON(json: any): JobPosting {
    return JobPostingToJSONTyped(json, false);
}

export function JobPostingToJSONTyped(value?: JobPosting | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'startupId': value['startupId'],
        'title': value['title'],
        'description': value['description'],
        'requiredZip': value['requiredZip'],
        'requiredCity': value['requiredCity'],
        'requiredCountry': value['requiredCountry'],
        'approxDurationWeeks': value['approxDurationWeeks'],
        'approxHoursPerWeek': value['approxHoursPerWeek'],
        'approxDaysPerWeek': value['approxDaysPerWeek'],
        'approxHourlySalaryEUR': value['approxHourlySalaryEUR'],
        'desiredStartDate': value['desiredStartDate'] == null ? undefined : ((value['desiredStartDate'] as any).toISOString().substring(0,10)),
        'matchingLanguageProficiencies': value['matchingLanguageProficiencies'] == null ? undefined : ((value['matchingLanguageProficiencies'] as Array<any>).map(LanguageProficiencyToJSON)),
        'matchingExpertiseAreas': value['matchingExpertiseAreas'],
        'matchingSkills': value['matchingSkills'],
        'matchingPositions': value['matchingPositions'],
        'matchingDegrees': value['matchingDegrees'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'subscriptionTier': value['subscriptionTier'],
    };
}

