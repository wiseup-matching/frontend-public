/* tslint:disable */
/* eslint-disable */
/**
 * Retirement‐Matching API
 * REST endpoints for user auth (via magic‐link), retirees, career elements, reference data, startups, job postings, matching, conversations, and hire invites. Uses a JWT set in a cookie. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Match
 */
export interface Match {
    /**
     * Unique ID for this match record.
     * @type {string}
     * @memberof Match
     */
    id: string;
    /**
     * The job posting being matched against.
     * @type {string}
     * @memberof Match
     */
    jobPosting?: string;
    /**
     * The retiree that was matched.
     * @type {string}
     * @memberof Match
     */
    retiree?: string;
    /**
     * The matching‐run that generated this match.
     * @type {string}
     * @memberof Match
     */
    matchingRun?: string;
    /**
     * Calculated match score (higher = better).
     * @type {number}
     * @memberof Match
     */
    score?: number | null;
}

/**
 * Check if a given object implements the Match interface.
 */
export function instanceOfMatch(value: object): value is Match {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function MatchFromJSON(json: any): Match {
    return MatchFromJSONTyped(json, false);
}

export function MatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): Match {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'jobPosting': json['jobPosting'] == null ? undefined : json['jobPosting'],
        'retiree': json['retiree'] == null ? undefined : json['retiree'],
        'matchingRun': json['matchingRun'] == null ? undefined : json['matchingRun'],
        'score': json['score'] == null ? undefined : json['score'],
    };
}

export function MatchToJSON(json: any): Match {
    return MatchToJSONTyped(json, false);
}

export function MatchToJSONTyped(value?: Match | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'jobPosting': value['jobPosting'],
        'retiree': value['retiree'],
        'matchingRun': value['matchingRun'],
        'score': value['score'],
    };
}

