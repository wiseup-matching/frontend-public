/* tslint:disable */
/* eslint-disable */
/**
 * Retirement‐Matching API
 * REST endpoints for user auth (via magic‐link), retirees, career elements, reference data, startups, job postings, matching, conversations, and hire invites. Uses a JWT set in a cookie. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface VerifyMagiclinkGet200Response
 */
export interface VerifyMagiclinkGet200Response {
    /**
     * 
     * @type {boolean}
     * @memberof VerifyMagiclinkGet200Response
     */
    success?: boolean;
    /**
     * 
     * @type {User}
     * @memberof VerifyMagiclinkGet200Response
     */
    user?: User;
}

/**
 * Check if a given object implements the VerifyMagiclinkGet200Response interface.
 */
export function instanceOfVerifyMagiclinkGet200Response(value: object): value is VerifyMagiclinkGet200Response {
    return true;
}

export function VerifyMagiclinkGet200ResponseFromJSON(json: any): VerifyMagiclinkGet200Response {
    return VerifyMagiclinkGet200ResponseFromJSONTyped(json, false);
}

export function VerifyMagiclinkGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerifyMagiclinkGet200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'] == null ? undefined : json['success'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
    };
}

export function VerifyMagiclinkGet200ResponseToJSON(json: any): VerifyMagiclinkGet200Response {
    return VerifyMagiclinkGet200ResponseToJSONTyped(json, false);
}

export function VerifyMagiclinkGet200ResponseToJSONTyped(value?: VerifyMagiclinkGet200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'user': UserToJSON(value['user']),
    };
}

