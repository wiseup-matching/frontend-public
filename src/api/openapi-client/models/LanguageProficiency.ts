/* tslint:disable */
/* eslint-disable */
/**
 * Retirement‐Matching API
 * REST endpoints for user auth (via magic‐link), retirees, career elements, reference data, startups, job postings, matching, conversations, and hire invites. Uses a JWT set in a cookie. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LanguageProficiency
 */
export interface LanguageProficiency {
    /**
     * Unique identifier for this proficiency record.
     * @type {string}
     * @memberof LanguageProficiency
     */
    id: string;
    /**
     * references **Language**
     * @type {string}
     * @memberof LanguageProficiency
     */
    languageId: string;
    /**
     * references **LanguageProficiencyLevel**
     * @type {string}
     * @memberof LanguageProficiency
     */
    levelId: string;
}

/**
 * Check if a given object implements the LanguageProficiency interface.
 */
export function instanceOfLanguageProficiency(value: object): value is LanguageProficiency {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('languageId' in value) || value['languageId'] === undefined) return false;
    if (!('levelId' in value) || value['levelId'] === undefined) return false;
    return true;
}

export function LanguageProficiencyFromJSON(json: any): LanguageProficiency {
    return LanguageProficiencyFromJSONTyped(json, false);
}

export function LanguageProficiencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): LanguageProficiency {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'languageId': json['languageId'],
        'levelId': json['levelId'],
    };
}

export function LanguageProficiencyToJSON(json: any): LanguageProficiency {
    return LanguageProficiencyToJSONTyped(json, false);
}

export function LanguageProficiencyToJSONTyped(value?: LanguageProficiency | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'languageId': value['languageId'],
        'levelId': value['levelId'],
    };
}

