/* tslint:disable */
/* eslint-disable */
/**
 * Retirement‐Matching API
 * REST endpoints for user auth (via magic‐link), retirees, career elements, reference data, startups, job postings, matching, conversations, and hire invites. Uses a JWT set in a cookie. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationActionsInner } from './NotificationActionsInner';
import {
    NotificationActionsInnerFromJSON,
    NotificationActionsInnerFromJSONTyped,
    NotificationActionsInnerToJSON,
    NotificationActionsInnerToJSONTyped,
} from './NotificationActionsInner';

/**
 * 
 * @export
 * @interface Notification
 */
export interface Notification {
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    message: string;
    /**
     * 
     * @type {Array<NotificationActionsInner>}
     * @memberof Notification
     */
    actions: Array<NotificationActionsInner>;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    timestamp: string;
}

/**
 * Check if a given object implements the Notification interface.
 */
export function instanceOfNotification(value: object): value is Notification {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('actions' in value) || value['actions'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function NotificationFromJSON(json: any): Notification {
    return NotificationFromJSONTyped(json, false);
}

export function NotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notification {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'title': json['title'],
        'message': json['message'],
        'actions': ((json['actions'] as Array<any>).map(NotificationActionsInnerFromJSON)),
        'timestamp': json['timestamp'],
    };
}

export function NotificationToJSON(json: any): Notification {
    return NotificationToJSONTyped(json, false);
}

export function NotificationToJSONTyped(value?: Notification | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'title': value['title'],
        'message': value['message'],
        'actions': ((value['actions'] as Array<any>).map(NotificationActionsInnerToJSON)),
        'timestamp': value['timestamp'],
    };
}

